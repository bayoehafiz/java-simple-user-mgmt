name: Release

on:
  push:
    tags:
      - 'v*'

env:
  JAVA_VERSION: '11'
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: .m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Run tests
      run: mvn clean test
      
    - name: Build application
      run: mvn clean package -DskipTests
      
    - name: Generate changelog
      id: changelog
      run: |
        # Get the tag name
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        
        # Generate changelog from git commits
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          CHANGELOG=$(git log $PREVIOUS_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi
        
        # Save changelog to file
        echo "## Changes in $TAG_NAME" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        if [ -z "$CHANGELOG" ]; then
          echo "- Initial release" >> CHANGELOG.md
        else
          echo "$CHANGELOG" >> CHANGELOG.md
        fi
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag_name }}
        release_name: Release ${{ steps.changelog.outputs.tag_name }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
        
    - name: Upload JAR to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/userapi-0.0.1-SNAPSHOT.jar
        asset_name: userapi-${{ steps.changelog.outputs.tag_name }}.jar
        asset_content_type: application/java-archive

  docker-release:
    name: Docker Release
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract tag name
      id: tag
      run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/java-user-api:${{ steps.tag.outputs.tag_name }}
          ${{ secrets.DOCKER_USERNAME }}/java-user-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
